{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/fitness-website/src/BMICalculator.js\",\n  _s = $RefreshSig$();\n// src/BMICalculator.js\nimport React, { useState } from 'react';\nimport './BMICalculator.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BMICalculator = () => {\n  _s();\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [result, setResult] = useState('');\n  const calculateBMI = () => {\n    const heightValue = parseFloat(height);\n    const weightValue = parseFloat(weight);\n\n    // Check if inputs are valid numbers\n    if (isNaN(heightValue) || isNaN(weightValue) || heightValue <= 100 || heightValue >= 250 || weightValue >= 150 || weightValue <= 0) {\n      setResult(\"Please enter valid height and weight.\");\n      return;\n    }\n    const bmi = weightValue / (heightValue / 100) ** 2;\n    let category;\n    if (bmi < 18.5) {\n      category = \"Underweight\";\n    } else if (bmi >= 18.5 && bmi < 25) {\n      category = \"Normal weight\";\n    } else if (bmi >= 25 && bmi < 30) {\n      category = \"Overweight\";\n    } else if (bmi >= 30 && bmi < 35) {\n      category = \"Obesity\";\n    } else {\n      category = \"Extra Obesity\";\n    }\n\n    // Display result\n    setResult(`Your BMI is ${bmi.toFixed(1)} (${category}).`);\n  };\n  const clearFields = () => {\n    setHeight('');\n    setWeight('');\n    setResult('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bmi-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BMI Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"bmiForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"height\",\n        children: \"Height (cm):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"height\",\n        value: height,\n        onChange: e => setHeight(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"weight\",\n        children: \"Weight (kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"weight\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: calculateBMI,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: clearFields,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(BMICalculator, \"HH07ws4gVFzkR0pIyN4pZt9uqZs=\");\n_c = BMICalculator;\nexport default BMICalculator;\nvar _c;\n$RefreshReg$(_c, \"BMICalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BMICalculator","_s","height","setHeight","weight","setWeight","result","setResult","calculateBMI","heightValue","parseFloat","weightValue","isNaN","bmi","category","toFixed","clearFields","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/fitness-website/src/BMICalculator.js"],"sourcesContent":["// src/BMICalculator.js\nimport React, { useState } from 'react';\nimport './BMICalculator.css'; // Assuming you have a CSS file for styling\n\nconst BMICalculator = () => {\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [result, setResult] = useState('');\n\n  const calculateBMI = () => {\n    const heightValue = parseFloat(height);\n    const weightValue = parseFloat(weight);\n\n    // Check if inputs are valid numbers\n    if (isNaN(heightValue) || isNaN(weightValue) || heightValue <= 100  || heightValue >= 250  || weightValue >= 150  || weightValue <= 0) {\n      setResult(\"Please enter valid height and weight.\");\n      return;\n    }\n\n    const bmi = weightValue / ((heightValue / 100) ** 2);\n    let category;\n\n    if (bmi < 18.5) {\n      category = \"Underweight\";\n    } else if (bmi >= 18.5 && bmi < 25) {\n      category = \"Normal weight\";\n    } else if (bmi >= 25 && bmi < 30) {\n      category = \"Overweight\";\n    } else if (bmi >= 30 && bmi < 35) {\n      category = \"Obesity\";\n    } else {\n      category = \"Extra Obesity\";\n    }\n\n\n   // Display result\n    setResult(`Your BMI is ${bmi.toFixed(1)} (${category}).`);\n  };\n\n  \n  const clearFields = () => {\n    setHeight('');\n    setWeight('');\n    setResult('');\n  };\n\n  return (\n    <div className=\"bmi-calculator\">\n      <h1>BMI Calculator</h1>\n      <form id=\"bmiForm\">\n        <label htmlFor=\"height\">Height (cm):</label>\n        <input\n          type=\"number\"\n          id=\"height\"\n          value={height}\n          onChange={(e) => setHeight(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"weight\">Weight (kg):</label>\n        <input\n          type=\"number\"\n          id=\"weight\"\n          value={weight}\n          onChange={(e) => setWeight(e.target.value)}\n          required\n        />\n\n        <div className=\"button-container\">\n          <button type=\"button\" onClick={calculateBMI}>Calculate</button>\n          <button type=\"button\" onClick={clearFields}>Delete</button>\n        </div>\n      </form>\n\n      <div id=\"result\">{result}</div>\n    </div>\n  );\n};\n\nexport default BMICalculator;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAGC,UAAU,CAACR,MAAM,CAAC;IACtC,MAAMS,WAAW,GAAGD,UAAU,CAACN,MAAM,CAAC;;IAEtC;IACA,IAAIQ,KAAK,CAACH,WAAW,CAAC,IAAIG,KAAK,CAACD,WAAW,CAAC,IAAIF,WAAW,IAAI,GAAG,IAAKA,WAAW,IAAI,GAAG,IAAKE,WAAW,IAAI,GAAG,IAAKA,WAAW,IAAI,CAAC,EAAE;MACrIJ,SAAS,CAAC,uCAAuC,CAAC;MAClD;IACF;IAEA,MAAMM,GAAG,GAAGF,WAAW,GAAI,CAACF,WAAW,GAAG,GAAG,KAAK,CAAE;IACpD,IAAIK,QAAQ;IAEZ,IAAID,GAAG,GAAG,IAAI,EAAE;MACdC,QAAQ,GAAG,aAAa;IAC1B,CAAC,MAAM,IAAID,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAG,EAAE,EAAE;MAClCC,QAAQ,GAAG,eAAe;IAC5B,CAAC,MAAM,IAAID,GAAG,IAAI,EAAE,IAAIA,GAAG,GAAG,EAAE,EAAE;MAChCC,QAAQ,GAAG,YAAY;IACzB,CAAC,MAAM,IAAID,GAAG,IAAI,EAAE,IAAIA,GAAG,GAAG,EAAE,EAAE;MAChCC,QAAQ,GAAG,SAAS;IACtB,CAAC,MAAM;MACLA,QAAQ,GAAG,eAAe;IAC5B;;IAGD;IACCP,SAAS,CAAC,eAAeM,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC,KAAKD,QAAQ,IAAI,CAAC;EAC3D,CAAC;EAGD,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBb,SAAS,CAAC,EAAE,CAAC;IACbE,SAAS,CAAC,EAAE,CAAC;IACbE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACER,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAMwB,EAAE,EAAC,SAAS;MAAAL,QAAA,gBAChBnB,OAAA;QAAOyB,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CvB,OAAA;QACE0B,IAAI,EAAC,QAAQ;QACbF,EAAE,EAAC,QAAQ;QACXG,KAAK,EAAExB,MAAO;QACdyB,QAAQ,EAAGC,CAAC,IAAKzB,SAAS,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC3CI,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFvB,OAAA;QAAOyB,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CvB,OAAA;QACE0B,IAAI,EAAC,QAAQ;QACbF,EAAE,EAAC,QAAQ;QACXG,KAAK,EAAEtB,MAAO;QACduB,QAAQ,EAAGC,CAAC,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC3CI,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEFvB,OAAA;QAAKkB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BnB,OAAA;UAAQ0B,IAAI,EAAC,QAAQ;UAACM,OAAO,EAAEvB,YAAa;UAAAU,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/DvB,OAAA;UAAQ0B,IAAI,EAAC,QAAQ;UAACM,OAAO,EAAEf,WAAY;UAAAE,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPvB,OAAA;MAAKwB,EAAE,EAAC,QAAQ;MAAAL,QAAA,EAAEZ;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzEID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA2EnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}