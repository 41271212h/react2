{"ast":null,"code":"var _jsxFileName = \"/Users/user/fitness-website/src/Tracker.js\",\n  _s = $RefreshSig$();\n// src/Tracker.js\nimport React, { useState } from 'react';\nimport './Tracker.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tracker() {\n  _s();\n  const [gender, setGender] = useState('');\n  const [weight, setWeight] = useState('');\n  const [weightError, setWeightError] = useState(''); // State for weight error message\n  const [foodName, setFoodName] = useState('');\n  const [foodItems, setFoodItems] = useState([]);\n  const [protein, setProtein] = useState('');\n  const [fat, setFat] = useState('');\n  const [calories, setCalories] = useState('');\n\n  // Function to calculate daily requirements\n  const calculateRequirements = () => {\n    let dailyCalories, dailyProtein, dailyFat;\n    if (gender === 'male') {\n      dailyCalories = 24 * weight;\n      dailyProtein = 70;\n      dailyFat = 70;\n    } else if (gender === 'female') {\n      dailyCalories = 22 * weight;\n      dailyProtein = 60;\n      dailyFat = 55;\n    }\n    return {\n      dailyCalories,\n      dailyProtein,\n      dailyFat\n    };\n  };\n\n  // Handle adding food\n  const addFood = () => {\n    if (!foodName || !protein || !fat || !calories) {\n      alert(\"Please fill out all fields.\");\n      return;\n    }\n    const foodItem = {\n      name: foodName,\n      protein: parseFloat(protein),\n      fat: parseFloat(fat),\n      calories: parseFloat(calories)\n    };\n    setFoodItems([...foodItems, foodItem]);\n    // Reset fields\n    setFoodName('');\n    setProtein('');\n    setFat('');\n    setCalories('');\n  };\n\n  // Validate weight input and calculate total intake\n  const validateWeightAndCalculate = () => {\n    const weightValue = parseInt(weight, 10);\n    if (weightValue < 20 || weightValue > 150) {\n      setWeightError(\"Please enter valid weight.\");\n      return false;\n    } else {\n      setWeightError(''); // Clear error message\n      return true;\n    }\n  };\n  const totalIntake = foodItems.reduce((totals, item) => {\n    totals.protein += item.protein;\n    totals.fat += item.fat;\n    totals.calories += item.calories;\n    return totals;\n  }, {\n    protein: 0,\n    fat: 0,\n    calories: 0\n  });\n  const {\n    dailyCalories,\n    dailyProtein,\n    dailyFat\n  } = calculateRequirements();\n  const handleCalculate = () => {\n    if (validateWeightAndCalculate()) {\n      // Proceed with your logic\n      console.log(\"Daily Requirements Calculated!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calorie, Protein, and Fat Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Weight (kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        onBlur: validateWeightAndCalculate // Validate on blur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), weightError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: weightError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Intake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Food Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodName,\n        onChange: e => setFoodName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Protein (g):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: protein,\n        onChange: e => setProtein(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fat (g):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: fat,\n        onChange: e => setFat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Calories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: calories,\n        onChange: e => setCalories(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFood,\n      children: \"Add Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Requirements:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Protein: \", dailyProtein, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Fat: \", dailyFat, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", dailyCalories, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Log:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \": \", item.protein, \" g protein, \", item.fat, \" g fat, \", item.calories, \" kcal\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Remaining Intake:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Protein: \", dailyProtein - totalIntake.protein, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Fat: \", dailyFat - totalIntake.fat, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Calories: \", dailyCalories - totalIntake.calories, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCalculate,\n      children: \"Calculate Requirements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Tracker, \"agRJRKLVD+N/HV7TZ3aAwwZ4JHI=\");\n_c = Tracker;\nexport default Tracker;\nvar _c;\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tracker","_s","gender","setGender","weight","setWeight","weightError","setWeightError","foodName","setFoodName","foodItems","setFoodItems","protein","setProtein","fat","setFat","calories","setCalories","calculateRequirements","dailyCalories","dailyProtein","dailyFat","addFood","alert","foodItem","name","parseFloat","validateWeightAndCalculate","weightValue","parseInt","totalIntake","reduce","totals","item","handleCalculate","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onBlur","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/user/fitness-website/src/Tracker.js"],"sourcesContent":["// src/Tracker.js\nimport React, { useState } from 'react';\nimport './Tracker.css'; // Assuming you have a CSS file for styling\n\nfunction Tracker() {\n  const [gender, setGender] = useState('');\n  const [weight, setWeight] = useState('');\n  const [weightError, setWeightError] = useState(''); // State for weight error message\n  const [foodName, setFoodName] = useState('');\n  const [foodItems, setFoodItems] = useState([]);\n  const [protein, setProtein] = useState('');\n  const [fat, setFat] = useState('');\n  const [calories, setCalories] = useState('');\n\n  // Function to calculate daily requirements\n  const calculateRequirements = () => {\n    let dailyCalories, dailyProtein, dailyFat;\n\n    if (gender === 'male') {\n      dailyCalories = 24 * weight;\n      dailyProtein = 70;\n      dailyFat = 70;\n    } else if (gender === 'female') {\n      dailyCalories = 22 * weight;\n      dailyProtein = 60;\n      dailyFat = 55;\n    }\n\n    return { dailyCalories, dailyProtein, dailyFat };\n  };\n\n  // Handle adding food\n  const addFood = () => {\n    if (!foodName || !protein || !fat || !calories) {\n      alert(\"Please fill out all fields.\");\n      return;\n    }\n\n    const foodItem = {\n      name: foodName,\n      protein: parseFloat(protein),\n      fat: parseFloat(fat),\n      calories: parseFloat(calories),\n    };\n    setFoodItems([...foodItems, foodItem]);\n    // Reset fields\n    setFoodName('');\n    setProtein('');\n    setFat('');\n    setCalories('');\n  };\n\n  // Validate weight input and calculate total intake\n  const validateWeightAndCalculate = () => {\n    const weightValue = parseInt(weight, 10);\n    if (weightValue < 20 || weightValue > 150) {\n      setWeightError(\"Please enter valid weight.\");\n      return false;\n    } else {\n      setWeightError(''); // Clear error message\n      return true;\n    }\n  };\n\n  const totalIntake = foodItems.reduce((totals, item) => {\n    totals.protein += item.protein;\n    totals.fat += item.fat;\n    totals.calories += item.calories;\n    return totals;\n  }, { protein: 0, fat: 0, calories: 0 });\n\n  const { dailyCalories, dailyProtein, dailyFat } = calculateRequirements();\n\n  const handleCalculate = () => {\n    if (validateWeightAndCalculate()) {\n      // Proceed with your logic\n      console.log(\"Daily Requirements Calculated!\");\n    }\n  };\n\n  return (\n    <div className=\"tracker\">\n      <h1>Calorie, Protein, and Fat Tracker</h1>\n      <div className=\"input-group\">\n        <label>Gender:</label>\n        <select value={gender} onChange={(e) => setGender(e.target.value)}>\n          <option value=\"\">Select</option>\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n        </select>\n      </div>\n      <div className=\"input-group\">\n        <label>Weight (kg):</label>\n        <input\n          type=\"number\"\n          value={weight}\n          onChange={(e) => setWeight(e.target.value)}\n          onBlur={validateWeightAndCalculate} // Validate on blur\n        />\n        {weightError && <p className=\"error-message\">{weightError}</p>}\n      </div>\n      <h2>Food Intake</h2>\n      <div className=\"input-group\">\n        <label>Food Name:</label>\n        <input\n          type=\"text\"\n          value={foodName}\n          onChange={(e) => setFoodName(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Protein (g):</label>\n        <input\n          type=\"number\"\n          value={protein}\n          onChange={(e) => setProtein(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Fat (g):</label>\n        <input\n          type=\"number\"\n          value={fat}\n          onChange={(e) => setFat(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Calories:</label>\n        <input\n          type=\"number\"\n          value={calories}\n          onChange={(e) => setCalories(e.target.value)}\n        />\n      </div>\n      <button onClick={addFood}>Add Food</button>\n\n      <h2>Today's Requirements:</h2>\n      <p>Protein: {dailyProtein} g</p>\n      <p>Fat: {dailyFat} g</p>\n      <p>Calories: {dailyCalories} kcal</p>\n\n      <h2>Food Log:</h2>\n      <ul>\n        {foodItems.map((item, index) => (\n          <li key={index}>\n            {item.name}: {item.protein} g protein, {item.fat} g fat, {item.calories} kcal\n          </li>\n        ))}\n      </ul>\n\n      <h2>Remaining Intake:</h2>\n      <p>Remaining Protein: {dailyProtein - totalIntake.protein} g</p>\n      <p>Remaining Fat: {dailyFat - totalIntake.fat} g</p>\n      <p>Remaining Calories: {dailyCalories - totalIntake.calories} kcal</p>\n      <button onClick={handleCalculate}>Calculate Requirements</button>\n    </div>\n  );\n}\n\nexport default Tracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}