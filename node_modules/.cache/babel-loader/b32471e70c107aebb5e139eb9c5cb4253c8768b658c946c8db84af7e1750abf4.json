{"ast":null,"code":"var _jsxFileName = \"/Users/user/fitness-website/src/Tracker.js\",\n  _s = $RefreshSig$();\n// src/Tracker.js\nimport React, { useState } from 'react';\nimport './Tracker.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tracker() {\n  _s();\n  const [gender, setGender] = useState('');\n  const [weight, setWeight] = useState('');\n  const [foodName, setFoodName] = useState('');\n  const [foodItems, setFoodItems] = useState([]);\n  const [protein, setProtein] = useState('');\n  const [fat, setFat] = useState('');\n  const [calories, setCalories] = useState('');\n\n  // Function to calculate daily requirements\n  const calculateRequirements = () => {\n    let dailyCalories, dailyProtein, dailyFat;\n    if (gender === 'male') {\n      dailyCalories = 24 * weight;\n      dailyProtein = 70;\n      dailyFat = 70;\n    } else if (gender === 'female') {\n      dailyCalories = 22 * weight;\n      dailyProtein = 60;\n      dailyFat = 55;\n    }\n    return {\n      dailyCalories,\n      dailyProtein,\n      dailyFat\n    };\n  };\n\n  // Handle adding food\n  const addFood = () => {\n    if (foodName && protein && fat && calories) {\n      const foodItem = {\n        name: foodName,\n        protein: parseFloat(protein),\n        fat: parseFloat(fat),\n        calories: parseFloat(calories)\n      };\n      setFoodItems([...foodItems, foodItem]);\n      // Reset fields\n      setFoodName('');\n      setProtein('');\n      setFat('');\n      setCalories('');\n    }\n  };\n\n  // Calculate total intake\n  const totalIntake = foodItems.reduce((totals, item) => {\n    totals.protein += item.protein;\n    totals.fat += item.fat;\n    totals.calories += item.calories;\n    return totals;\n  }, {\n    protein: 0,\n    fat: 0,\n    calories: 0\n  });\n  const {\n    dailyCalories,\n    dailyProtein,\n    dailyFat\n  } = calculateRequirements();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calorie, Protein, and Fat Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: gender,\n        onChange: e => setGender(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Weight (kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: weight,\n        onChange: e => setWeight(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Intake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Food Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodName,\n        onChange: e => setFoodName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Protein (g):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: protein,\n        onChange: e => setProtein(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fat (g):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: fat,\n        onChange: e => setFat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Calories:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: calories,\n        onChange: e => setCalories(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFood,\n      children: \"Add Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Requirements:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Protein: \", dailyProtein, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Fat: \", dailyFat, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calories: \", dailyCalories, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Food Log:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foodItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \": \", item.protein, \" g protein, \", item.fat, \" g fat, \", item.calories, \" kcal\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Remaining Intake:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Protein: \", dailyProtein - totalIntake.protein, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Fat: \", dailyFat - totalIntake.fat, \" g\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remaining Calories: \", dailyCalories - totalIntake.calories, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Tracker, \"+2BCeP72ElNVf5D02ZslwfRyz0o=\");\n_c = Tracker;\nexport default Tracker;\nvar _c;\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Tracker","_s","gender","setGender","weight","setWeight","foodName","setFoodName","foodItems","setFoodItems","protein","setProtein","fat","setFat","calories","setCalories","calculateRequirements","dailyCalories","dailyProtein","dailyFat","addFood","foodItem","name","parseFloat","totalIntake","reduce","totals","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/user/fitness-website/src/Tracker.js"],"sourcesContent":["// src/Tracker.js\nimport React, { useState } from 'react';\nimport './Tracker.css'; // Assuming you have a CSS file for styling\n\nfunction Tracker() {\n  const [gender, setGender] = useState('');\n  const [weight, setWeight] = useState('');\n  const [foodName, setFoodName] = useState('');\n  const [foodItems, setFoodItems] = useState([]);\n  const [protein, setProtein] = useState('');\n  const [fat, setFat] = useState('');\n  const [calories, setCalories] = useState('');\n\n  // Function to calculate daily requirements\n  const calculateRequirements = () => {\n    let dailyCalories, dailyProtein, dailyFat;\n\n    if (gender === 'male') {\n      dailyCalories = 24 * weight;\n      dailyProtein = 70;\n      dailyFat = 70;\n    } else if (gender === 'female') {\n      dailyCalories = 22 * weight;\n      dailyProtein = 60;\n      dailyFat = 55;\n    }\n\n    return { dailyCalories, dailyProtein, dailyFat };\n  };\n\n  // Handle adding food\n  const addFood = () => {\n    if (foodName && protein && fat && calories) {\n      const foodItem = {\n        name: foodName,\n        protein: parseFloat(protein),\n        fat: parseFloat(fat),\n        calories: parseFloat(calories),\n      };\n      setFoodItems([...foodItems, foodItem]);\n      // Reset fields\n      setFoodName('');\n      setProtein('');\n      setFat('');\n      setCalories('');\n    }\n  };\n\n  // Calculate total intake\n  const totalIntake = foodItems.reduce((totals, item) => {\n    totals.protein += item.protein;\n    totals.fat += item.fat;\n    totals.calories += item.calories;\n    return totals;\n  }, { protein: 0, fat: 0, calories: 0 });\n\n  const { dailyCalories, dailyProtein, dailyFat } = calculateRequirements();\n\n  return (\n    <div className=\"tracker\">\n      <h1>Calorie, Protein, and Fat Tracker</h1>\n      <div className=\"input-group\">\n        <label>Gender:</label>\n        <select value={gender} onChange={(e) => setGender(e.target.value)}>\n          <option value=\"\">Select</option>\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n        </select>\n      </div>\n      <div className=\"input-group\">\n        <label>Weight (kg):</label>\n        <input\n          type=\"number\"\n          value={weight}\n          onChange={(e) => setWeight(e.target.value)}\n        />\n      </div>\n      <h2>Food Intake</h2>\n      <div className=\"input-group\">\n        <label>Food Name:</label>\n        <input\n          type=\"text\"\n          value={foodName}\n          onChange={(e) => setFoodName(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Protein (g):</label>\n        <input\n          type=\"number\"\n          value={protein}\n          onChange={(e) => setProtein(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Fat (g):</label>\n        <input\n          type=\"number\"\n          value={fat}\n          onChange={(e) => setFat(e.target.value)}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Calories:</label>\n        <input\n          type=\"number\"\n          value={calories}\n          onChange={(e) => setCalories(e.target.value)}\n        />\n      </div>\n      <button onClick={addFood}>Add Food</button>\n\n      <h2>Today's Requirements:</h2>\n      <p>Protein: {dailyProtein} g</p>\n      <p>Fat: {dailyFat} g</p>\n      <p>Calories: {dailyCalories} kcal</p>\n\n      <h2>Food Log:</h2>\n      <ul>\n        {foodItems.map((item, index) => (\n          <li key={index}>\n            {item.name}: {item.protein} g protein, {item.fat} g fat, {item.calories} kcal\n          </li>\n        ))}\n      </ul>\n\n      <h2>Remaining Intake:</h2>\n      <p>Remaining Protein: {dailyProtein - totalIntake.protein} g</p>\n      <p>Remaining Fat: {dailyFat - totalIntake.fat} g</p>\n      <p>Remaining Calories: {dailyCalories - totalIntake.calories} kcal</p>\n    </div>\n  );\n}\n\nexport default Tracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}